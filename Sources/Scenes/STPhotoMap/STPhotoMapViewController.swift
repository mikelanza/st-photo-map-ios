//
//  STPhotoMapViewController.swift
//  STPhotoMap
//
//  Created by Crasneanu Cristian on 12/04/2019.
//  Copyright (c) 2019 mikelanza. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol STPhotoMapDisplayLogic: class {
}

public class STPhotoMapViewController: UIViewController, STPhotoMapDisplayLogic {
    var interactor: STPhotoMapBusinessLogic?
    var router: (NSObjectProtocol & STPhotoMapRoutingLogic & STPhotoMapDataPassing)?
    
    public weak var photoMapView: STPhotoMapView!
    
    // MARK: Object lifecycle
    
    public convenience init() {
        self.init(nibName: nil, bundle: nil)
    }
    
    override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?) {
        super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
        self.setup()
    }
    
    required init?(coder aDecoder: NSCoder) {
        super.init(coder: aDecoder)
        self.setup()
    }
    
    // MARK: Setup
    
    private func setup() {
        let viewController = self
        let interactor = STPhotoMapInteractor()
        let presenter = STPhotoMapPresenter()
        let router = STPhotoMapRouter()
        viewController.interactor = interactor
        viewController.router = router
        interactor.presenter = presenter
        presenter.displayer = viewController
        router.viewController = viewController
        router.dataStore = interactor
    }
    
    // MARK: View lifecycle
    
    override public func viewDidLoad() {
        super.viewDidLoad()
        self.setupSubviews()
        self.setupSubviewsConstraints()
    }
}

// MARK: - Subviews configuration

extension STPhotoMapViewController {
    private func setupSubviews() {
        self.setupPhotoMapView()
    }
    
    private func setupPhotoMapView() {
        let photoMapView = STPhotoMapView()
        photoMapView.translatesAutoresizingMaskIntoConstraints = false
        self.view.addSubview(photoMapView)
        self.photoMapView = photoMapView
    }
}

// MARK: - Constraints configuration

extension STPhotoMapViewController {
    private func setupSubviewsConstraints() {
        self.setupPhotoMapViewConstraints()
    }
    
    private func setupPhotoMapViewConstraints() {
        self.photoMapView?.topAnchor.constraint(equalTo: self.view.topAnchor).isActive = true
        self.photoMapView?.bottomAnchor.constraint(equalTo: self.view.bottomAnchor).isActive = true
        self.photoMapView?.leadingAnchor.constraint(equalTo: self.view.leadingAnchor).isActive = true
        self.photoMapView?.trailingAnchor.constraint(equalTo: self.view.trailingAnchor).isActive = true
    }
}
