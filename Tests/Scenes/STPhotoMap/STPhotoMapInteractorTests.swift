//
//  STPhotoMapInteractorTests.swift
//  STPhotoMap
//
//  Created by Dimitri Strauneanu on 12/04/2019.
//  Copyright (c) 2019 mikelanza. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

@testable import STPhotoMap
import XCTest

class STPhotoMapInteractorTests: XCTestCase {
    // MARK: Subject under test
  
    var sut: STPhotoMapInteractor!
    var presenterSpy: STPhotoMapPresentationLogicSpy!
    var workerSpy: STPhotoMapWorkerSpy!
  
    // MARK: Test lifecycle
  
    override func setUp() {
        super.setUp()
        self.setupSTPhotoMapInteractor()
    }
  
    override func tearDown() {
        super.tearDown()
    }
  
    // MARK: Test setup
  
    func setupSTPhotoMapInteractor() {
        self.sut = STPhotoMapInteractor()
        
        self.presenterSpy = STPhotoMapPresentationLogicSpy()
        self.sut.presenter = self.presenterSpy
        
        self.workerSpy = STPhotoMapWorkerSpy(delegate: self.sut)
        self.sut.worker = self.workerSpy
    }
    
    // MARK: Test doubles
  
    // MARK: Tests
      
    func testShouldUpdateVisibleTiles() {
        let tiles: [TileCoordinate] = [TileCoordinate(zoom: 10, x: 1, y: 2)]
        let request = STPhotoMapModels.VisibleTiles.Request(tiles: tiles)
        self.sut.shouldUpdateVisibleTiles(request: request)
        
        XCTAssertEqual(self.sut.visibleTiles.count, 1)
    }
    
    func testShouldCacheGeojsonObjectsWhenCacheIsEmpty() {
        self.sut.cache.removeAllTiles()
        
        let waitExpectation = expectation(description: "Waiting for the synchronized array to remove all tiles.")
        let queue = DispatchQueue(label: "queue", attributes: .concurrent)
        queue.async {
            waitExpectation.fulfill()
        }
        waitForExpectations(timeout: 1.0)
        
        self.sut.visibleTiles = [TileCoordinate(zoom: 10, x: 1, y: 2)]
        self.sut.shouldCacheGeojsonObjects()
        
        XCTAssertTrue(self.workerSpy.getGeojsonTileForCachingCalled)
    }
    
    func testShouldCacheGeojsonObjectsWhenCacheIsNotEmpty() {
        let tileCoordinate = TileCoordinate(zoom: 10, x: 1, y: 2)
        let keyUrl = STPhotoMapUrlBuilder().geojsonTileUrl(tileCoordinate: tileCoordinate).keyUrl
        
        self.sut.cache.addTile(tile: STPhotoMapCache.Tile(keyUrl: keyUrl, geojsonObject: nil))
        
        let waitExpectation = expectation(description: "Waiting for the synchronized array to add a tile.")
        let queue = DispatchQueue(label: "queue", attributes: .concurrent)
        queue.async {
            waitExpectation.fulfill()
        }
        waitForExpectations(timeout: 1.0)
        
        self.sut.visibleTiles = [tileCoordinate]
        self.sut.shouldCacheGeojsonObjects()
        
        XCTAssertFalse(self.workerSpy.getGeojsonTileForCachingCalled)
    }
}
